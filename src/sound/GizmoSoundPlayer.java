package sound;

import javax.sound.midi.MidiChannel;
import javax.sound.midi.MidiSystem;
import javax.sound.midi.MidiUnavailableException;
import javax.sound.midi.Synthesizer;

import view.GUI;
import model.gizmos.IGizmo;

/**
 * Plays the sounds generated by the gizmo
 *
 */
class GizmoSoundPlayer extends Thread{
	
	private IGizmo gizmo;
	private GUI ui;
	
	private static boolean fail = false;
	
	/**
	 * The constructor
	 * 
	 * @param g The gizmo to play the sounds for
	 * @param ui The ui to show errors on
	 */
	public GizmoSoundPlayer(IGizmo g, GUI ui) {
		
		gizmo = g;
		this.ui = ui;
	}
	
	/*
	 * (non-Javadoc)
	 * @see java.lang.Thread#run()
	 */
	@Override
	public void run() {
		
		if(fail)
			return;
		
		int channel = 0;

		int volume = 127;
		int duration = 200;
		
		int note = 0;
		
		switch (gizmo.getType()) {
		case Square:
			note = 5;
			break;
		case Circle:
			note = 10;
			break;
		case Absorber:
			note = 0;
		case RightFlipper:
		case LeftFlipper:
			note = 40;
			break;
		case Triangle:
			note = 60;
			break;
		}

		Synthesizer synth;
		try {
			synth = MidiSystem.getSynthesizer();
			
			synth.open();
			MidiChannel[] channels = synth.getChannels();
			
			channels[channel].noteOn(note, volume);
			
			Thread.sleep(duration);
			
			channels[channel].noteOff(note);
			
			synth.close();
		} catch (MidiUnavailableException e) {
			ui.displayErrorMessage("Unable to play sound effects");
			fail = true;
		} catch (InterruptedException e) {
			ui.displayErrorMessage("Thread error: 1 \n sorry!");
		}	
	}
}
